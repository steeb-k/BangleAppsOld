// Load settings from Storage or use defaults
var settings = require("Storage").readJSON("settings.json", 1) || {
  showLockIconWhenLocked: true
};

const lockIconLight = require("heatshrink").decompress(atob("jEYwUBqtX///6tVqtfBoP1AoN8AoM9AoPwn/8h4WB4AXBgfVr4CBBAP1rgOBCgM1vgaCAYN8moFBrgLBAon8n4jBAYYAP+BcDh4FjHaI"));

const lockIconDark = require("heatshrink").decompress(atob("jEYwUC1WoA4Mq1Wq0H//8KAoODAoPCAoMP4ED+AWBn4XB/kq0ACBBAMK0YOBCgPKwYaCAYOD5QFB0YLBAokD4AjBAYYAJitVAAVUj5GBAAP0AsYvFIJY"));

// Draw appropriate lock icon based on theme
function drawLockIcon() {
  g.reset();
  let isDarkMode = g.theme.bg < 0x7FFF;
  g.drawImage(
    isDarkMode ? lockIconDark : lockIconLight,
    6, 4
  );
}

// Cantarell fonts. Bold for the clock, small for the date.
Graphics.prototype.setFontAdwaitaSansRegular = function() {
  // Actual height 42 (42 - 1)
  // 2 BPP
  return this.setFontCustom(
    E.toString(require('heatshrink').decompress(atob('AD8D+gLJh/8BZMf/wLVEZY7LABtsBRNvGBMb/4LIBQILIBQX/yAKFg4KJgwKN8gKFgQKJgO/BRn5VY4KJgEvBRILB/1ABZEuBRIAdiAJIQYRAHgKDC//4NpAACwALEQgQAC+gKDgYsDi3//oLDhYeEFAI9Dj7zEYgPAAoU/+A1Ev/gAgYQDDwQSD35mFh4LD/5lFhZUDBY0HPIYLeF4hHLL40vBYZ3Lj6hER4qnByCnIX4VQgEbX4rXLd5kBBQZ1DAAcGBQP6OAoAYhYrHdI4AGn/QBZO/VApeFCxMD/xGK/hGKSopGF8tVAAlUBYamEAAIqDBcYAltJ+EXIkfSAkvBYm/BYm/BYcD/4LDXIILDh//9IFCg4LEj/9GggLEn40EPoIGDv7uE//PBYe/wBAEp4LDfQkL/sPBZEv+gLJv/gBZBpBwALIHQJyBBY8PagILEKYZvCBYl/6AbCAYILEn/0TAVABYrKBoF/TwQLEhf/AAIaBBYsCBYSeCBYg8BbAgLFHIJJCBYwAFgtQBZIAeigDCOAIKEg6kBSIRuCb4YLEQwQGDBYieCaYYLDtZwEWAbSDO4cP/ApEj48Dj6IFhYpDl4oBgNUGwQLDn68BA4cCKgYLGgLEDBbYrCBZY7EKYUHCYQPDNYcP/5fGQYUv/+ARQsLaQO/14nBl6PDWYIABj/4gP/8ALCAoLTBhYPCJwIACv///AbDYogUBFoIKBIwYACWIRJBcQYAFYIYAfj5dDAA2/SgIAHL4ILJj4LK34LJEQPfBZAiBp4LI3/4h4LHEQPgBZAiBoALI36vBBY4iCBZAiCBZAiCBY4iDBY4iDBY4iDBY4iDBZAAGBoYLjAAibIBeUKyALJAC0BgEpA4tW1Z0BoE/VocAn6ADBYLFDBY7dDBZHABYf+0tH/o1Bbwk/CAJ1Dn/0BYsv6CFC/ALFn+AAwMHJAYLCv5DCgYzBBYn/AwUCBZUB/wLhF5BHK36LCL5CLCj53HCYW/SYSbE/+Ujf/SYQLDg7CDSYQLDXgIABLwcAioDCl4LBXwYAEgQWBdwYAbgtVqgKHLYIAB8g4HAAY7FKAQACKYhoDAASyDQAX0AQOVv4kEh59BV4UD/7DCFwIpBn6jC36nEAgO/UYU/X4bgCfYcPBYY0BgKvDhZUDCgMCJ4cHd4YLBgbuCBagjDhYLFgQ7Dh47EI4JTDj5fHP4RrEn/gBwIHBDYKDDl45Bn4wBhf/Q4Q0BGAMfYAa/DVoNAX4IABMYZIDAQIABGoIADj4LBEgP+fYoADrVQBRAATJggLakALJgL7EBYqzEBYqnBBZJ5BBZAWBWYgLECwL6DBYgWGBYjVBbgILH37tEBYgWHBYYWHBYQWIBYQWIBYMHCxALBv4WIBYP//zLJ//gBZIWJBYIWJgFVfZQAdFJTXBIIqaByBkCQ4qDB/EDBYP/oDrF/oaBAAKUDCYcf/K4B+AuEoO/14UBj/0BYUP/BFCwASB/gLCl4cBDQIqCBYc/D4MDVQUCKgc/4ALBA4UCXQYLDD4UBBY0CBZQXLF4g7EI4MHCYQPDL4cPL453Cl53HOgNV/+vZIKPEU4n9gKnEX5ZIB//0a45RBHIW/d4wADYII9BABFVBRIAfgX/8gEBlILFRoJUCn5HEO4X/P4M/TQZqCAAIIBPgILDXgOVOoJsCE4IuCCgIaBoApBTYc/VgX/eYIGDgF/A4IDBCgMPBYe/FARRChbXDIAcfBYMHewILGEAILIFgQLJEZY7HegUvKY5fCn5rGn58CRgW/QYcvFALNBSQQeCFAP+HQKeBv6zEX4f11///rXHbQjvGAARZCAAUGBQfkBQgABiwKB0gKGAEkBVwcPQYZtCPIKWCMAsPP4d/DgYLNEZcCHZQAIA'))),
    46,
    atob("CRAcDxscHhobGRsbCQ=="),
    48|131072
  );
}

Graphics.prototype.setFontAdwaitaSansRegularSmall = function() {
  // Actual height 19 (18 - 0)
  // 2 BPP
  return this.setFontCustom(
    E.toString(require('heatshrink').decompress(atob('ABEgAgcP4AFD/gEDgIbKtgPD34bCjf/yAIC/1AgEL//kFoQICAAP4JJ8G//5AgMD///IwQgBjfwgEvFIWAgY9CngBCDAPABQsuAgMLBAP9gEH+gCBFYIHBKQX+MwdUJhstAgcHSwcBJIIACnoEDLgRdCn4FCV4gAHNAV8NQImBj/AgJUCEAIrBgP7Nod+PAcfoYKCg/QBAMvoX0CYRxCBQMCOIKMDAAMUIxcC6BGCgG9IIJJCcAK6C6EFXQnwXQcPBQaKBBAMC8E/wG4DoP/v1vEYM/6P/8D4D8i7NgEeAgcLW4biBWwf4BQUC/pCBS4J9BBQW/HwIEBn4+BBQLQNCoQACdwkEKJ1AqBAB3/8hahBFYPAv42B6E4gCDBnkLoCZDF4KZCh4KE3jACnkD+iZBBQMf/4rBiDzBTJsG/74BI4JsBQoMA/sfq44Bl4nBhbmB4G0IIhVBIIX0BQU9hYVB4EB+k/owMBhfBFYcYgX+VgIAKEQLUDWIUcBQcfGwQEBHAYECPAQEBBQIEDgff/AmCn4EDgYEDgEUaZyOBoF/wEAg//l//gEB/376IjBnsC+kHJgUfRwcA+CODBQcuaAIVBgH//fVKYMH/0fYAUFgA2CABUB/9AugFB3/+hfgQINB+kvfgPQF4N8IYZBDAIJMDngRBgXghdAMQMP6/h34rBv///5BCt7VNAAOQgEgWAQjBNoMD+EA/gKBghaBDIwA='))),
    46,
    atob("BggOCA0NDw0NDQ0NBg=="),
    22|131072
  );
}

let lightWallpaper = require("heatshrink").decompress(atob("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"))
let darkWallpaper = require("heatshrink").decompress(atob("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"))

// Draw thick outline - for time
function drawTextWithOutline(text, x, y, textColor, outlineColor) {
    g.setColor(outlineColor);
    [-3, 0, 3].forEach(dx => {
        [-3, 0, 3].forEach(dy => {
            if (dx || dy) g.drawString(text, x + dx, y + dy);
        });
    });
    g.setColor(textColor);
    g.drawString(text, x, y);
}

// Draw thin outline - for date
function drawTextWithThinOutline(text, x, y, textColor, outlineColor) {
    g.setColor(outlineColor);
    [-2, 0, 2].forEach(dx => {
        [-2, 0, 2].forEach(dy => {
            if (dx || dy) g.drawString(text, x + dx, y + dy);
        });
    });
    g.setColor(textColor);
    g.drawString(text, x, y);
}

// Drawing the watch face
function drawWatchFace() {
    let date = new Date();
    let hours = date.getHours();
    let minutes = date.getMinutes();

    // Determine theme and colors
    let isDarkMode = g.theme.bg < 0x7FFF;
    let textColor = isDarkMode ? 0xFFFF : 0x0000;
    let outlineColor = isDarkMode ? 0x0000 : 0xFFFFFF;

    // Screen size
    let screenWidth = g.getWidth();
    let screenHeight = g.getHeight();
    let centerX = screenWidth / 2;

    // Clear background and draw wallpaper
    g.clear();
    g.drawImage(isDarkMode ? darkWallpaper : lightWallpaper, 0, 0);

    // Format time and date
    let timeStr = ("0" + hours).slice(-2) + ":" + ("0" + minutes).slice(-2);
    let months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun",
        "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    let dateStr = `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;

    // Estimate sizes
    g.setFontAdwaitaSansRegular();
    let timeWidth = g.stringWidth(timeStr);
    let timeHeight = 58;
    let spacing = 10;
    let dateHeight = 22;

    let totalHeight = timeHeight + spacing + dateHeight;
    let startY = Math.floor((screenHeight - totalHeight) / 2);

    // Draw time
    drawTextWithOutline(
        timeStr,
        centerX - (timeWidth / 2),
        startY,
        textColor,
        outlineColor
    );

    // Draw date
    g.setFontAdwaitaSansSmall();
    let dateWidth = g.stringWidth(dateStr);
    drawTextWithThinOutline(
        dateStr,
        centerX - (dateWidth / 2),
        startY + timeHeight + spacing,
        isDarkMode ? 0xFFFF : 0x0000,
        outlineColor
    );

    // If screen locked and setting enabled, draw lock icon
    if (Bangle.isLocked()) {
        drawLockIcon();
    }
}

// Mark this app as a clock so launcher button works
Bangle.setUI({
  mode: 'clock',
  remove: function () {
    require('widget_utils').show();
  }
});

// Redraw on lcdPower and lock events
Bangle.on('lcdPower', on => {
  if (on) drawWatchFace();
});

Bangle.on('lock', drawWatchFace);

// Redraw every minute
setInterval(drawWatchFace, 60000);
drawWatchFace();

Bangle.loadWidgets();
require("widget_utils").swipeOn();